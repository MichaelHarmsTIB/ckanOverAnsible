---

- import_tasks: ckan_dev_ini.yml

- name: Create directory for ckan config files
  become: true
  become_user: root
  become_method: sudo
  file: 'path={{ ckan_conf_path }} owner={{ ckan_system_user }} state=directory'

- name: Make secondary directory to link confs into
  become: true
  become_user: root
  become_method: sudo
  file: 'path=/etc/ckan/ state=directory owner={{ ckan_system_user }}'

- name: Make lib directory in ckan base
  become: true
  become_user: root
  become_method: sudo
  file: 'path={{ ckan_install_base_path }}/lib/default state=directory owner={{ ckan_system_user }}'

- name: Make secondary directory to link installation into
  become: true
  become_user: root
  become_method: sudo
  file: 'path=/usr/lib/ckan state=directory owner=ckan'

- name: Make filestore directory
  become: true
  become_user: root
  become_method: sudo
  file: 'path=/home/{{ ckan_system_user }}/filestore state=directory owner=www-data'

- name: Run CKAN installation script
  become: true
  become_user: root
  become_method: sudo
  shell: |
    virtualenv --no-site-packages default
    . default/bin/activate
    pip install -U setuptools==36.1
    pip install --ignore-installed -e {{ ckan_repository_address }}
    pip install --ignore-installed -r default/src/ckan/pip-requirements-docs.txt
    exit
  args:
    chdir: /usr/lib/ckan
    creates: /usr/lib/ckan/default/src/ckan/ckan/config/solr/schema.xml

- name: Check whether CKAN is installed
  stat: path={{ ckan_install_path }}/src/ckan

- name: Check whether there is a virtualenv already
  stat: path={{ ckan_install_path }}/bin/activate

#plugin pdf view
- import_tasks: plugins/pdf_view.yml

- name: Ensure CKAN config is present
  become: true
  become_user: root
  become_method: sudo
  template:
    src: ../../templates/default/ckan/development.ini
    dest: /etc/ckan/default/development.ini
  when: not ansible_check_mode

- name: Ensure CKAN who.ini is symlinked
  become_user: root
  become: yes
  become_method: sudo
  file:
    src: /usr/lib/ckan//default/src/ckan/ckan/config/who.ini
    dest: /etc/ckan/default/who.ini
    state: link

- name: Ensure WSGI specification for CKAN is present
  become_user: root
  become: yes
  template:
    src: ../../templates/default/apache2/apache.wsgi
    dest: /etc/ckan/default/apache.wsgi

## Licenses for dataset upload
- name: copy fid-move license.json
  become_user: root
  become: yes
  template:
    src: ../../templates/default/ckan/fid_move_licenses.json
    dest: /etc/ckan/default/fid_move_licenses.json

## Fix ckan user rights
- name: Give user Ckan rights
  become_user: root
  become: yes
  file:
    path: /usr/lib/ckan
    state: directory
    recurse: yes
    owner: ckan

# Plugins
- import_tasks: plugins/datapusher.yml
- import_tasks: plugins/datacite.yml





